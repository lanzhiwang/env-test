apiVersion: builds.katanomi.dev/v1alpha1
kind: Build
spec:
  workspaces:
    - description: |
        This workspace is shared among all the pipeline tasks to read/write common resources
      name: source
  tasks:
    - name: build-image
      timeout: 30m
      retries: 0
      taskRef:
        kind: ClusterTask
        name: alauda-build-image
      workspaces:
        - name: source
          workspace: source
      params:
        - name: container-image
          value: build-harbor.alauda.cn/middleware/env-test
        - name: container-image-tag
          value: $(build.git.version.docker)
        - name: labels
          value:
            - version=$(build.git.version.docker)
            - branch=$(build.git.branch.name)
            - commit=$(build.git.lastCommit.id)
    - name: build-statistics-image
      timeout: 30m
      retries: 0
      taskRef:
        kind: ClusterTask
        name: alauda-build-image
      workspaces:
        - name: source
          workspace: source
      params:
        - name: container-image
          value: build-harbor.alauda.cn/middleware/env-test-statistics
        - name: container-image-tag
          value: $(build.git.version.docker)
        - name: dockerfile
          value: app/statistics/Dockerfile
        - name: context
          value: app/statistics
        - name: labels
          value:
            - version=$(build.git.version.docker)
            - branch=$(build.git.branch.name)
            - commit=$(build.git.lastCommit.id)
  finally:
    # Release tag
    - name: release-tag
      when:
        # only during releases
        - input: "$(build.git.versionPhase)"
          operator: in
          values: ["custom", "ga"]
        # all tasks must succeed
        - input: $(tasks.status)
          operator: in
          values: ["Succeeded", "Completed"]
      timeout: 30m
      retries: 1
      taskRef:
        kind: ClusterTask
        name: alauda-release-tag
      workspaces:
        - name: source
          workspace: source
      params:
        - name: verbose
          value: "false"
        - name: version
          value: $(build.git.version.docker)

  runTemplate:
    spec:
      taskRunSpecs: []
